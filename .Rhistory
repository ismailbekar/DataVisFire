guides(fill = guide_legend(override.aes = list(alpha=0.2))) +
theme(axis.text = element_text(size=14),
axis.title=element_text(size=13,face="bold"),
legend.title=element_text(size=15, face = "bold"),
legend.text=element_text(size=15),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 13, face = "bold"),
panel.border = element_rect(colour = "black")) +
scale_fill_manual("Model Performance", labels= c("Poor", "Moderate", "Good"))
AUC <- AUC_df %>%
mutate(test.auc = round(test.auc, 3)) %>%
mutate(model.auc = case_when(!grepl("_to_", AUC_df$M.name) ~ AUC_df$test.auc)) %>%
mutate(transfer.auc = case_when(grepl("_to_", AUC_df$M.name) ~ AUC_df$test.auc,
!grepl("_to_", AUC_df$M.name) ~ AUC_df$test.auc)) %>%
mutate(Alpha = if_else(AUC_df$TM_axis == "GR" | AUC_df$TM_axis == "VS" | AUC_df$TM_axis == "TI", "Sub-regional model", "Base model"))
AUC <- AUC %>%
mutate(model.auc = case_when(grepl("CH$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "CH" & Resolution == "Coarse.AUC")[1,2],
grepl("SPA$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "SPA" & Resolution == "Coarse.AUC")[1,2],
grepl("AU$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "AU" & Resolution == "Coarse.AUC")[1,2],
grepl("TR$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "TR" & Resolution == "Coarse.AUC")[1,2],
grepl("CR$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "CR" & Resolution == "Coarse.AUC")[1,2],
grepl("GR$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "GR" & Resolution == "Coarse.AUC")[1,2],
grepl("TI$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "TI" & Resolution == "Coarse.AUC")[1,2],
grepl("VS$", AUC$M.name) & grepl("Coarse.AUC", AUC$Resolution) ~ filter(AUC, M.name == "VS" & Resolution == "Coarse.AUC")[1,2],
grepl("CH$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "CH" & Resolution == "Fine.AUC")[1,2],
grepl("SPA$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "SPA" & Resolution == "Fine.AUC")[1,2],
grepl("AU$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "AU" & Resolution == "Fine.AUC")[1,2],
grepl("TR$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "TR" & Resolution == "Fine.AUC")[1,2],
grepl("CR$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "CR" & Resolution == "Fine.AUC")[1,2],
grepl("GR$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "GR" & Resolution == "Fine.AUC")[1,2],
grepl("TI$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "TI" & Resolution == "Fine.AUC")[1,2],
grepl("VS$", AUC$M.name) & grepl("Fine.AUC", AUC$Resolution) ~ filter(AUC, M.name == "VS" & Resolution == "Fine.AUC")[1,2]))
AUC_base <- AUC %>%
filter(TM_axis %in% c("AU", "CH", "SPA", "TR", "CR")) %>%
filter(TA_axis %in% c("AU", "CH", "SPA", "TR", "CR")) # %>%
plot2 <- ggplot(data= AUC_base, aes(x=model.auc, y=transfer.auc, color= TM_axis, shape= TA_axis)) +
geom_point(size= 9) +
labs(caption= "Red: Poor Performance, Yellow: Moderate Performance, Green: Good Performance") +
scale_colour_discrete(name = "Model") +
scale_shape_discrete(name= "Target Area") +
scale_x_continuous("AUC values of the original models", limits = c(0.45, 0.95)) +
scale_y_continuous("AUC values in transfer regions", limits = c(0.45, 0.95)) +
geom_segment(x= 0, y= 0, xend= 1, yend= 1, color= "black", size= 0.01) +
facet_wrap(~ Resolution) +
theme_bw() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=10, face="bold"),
legend.text=element_text(size=12))
plot2 + geom_rect(mapping=aes(xmin=0.70, xmax=0.95, ymin=0.70, ymax=0.95), fill="green", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.95, ymin=0.60, ymax=0.70),  fill="gold2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.70, ymin=0.70, ymax=0.95), fill="gold2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.60, ymin=0.60, ymax=0.95), fill="firebrick2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.95, ymin=0.45, ymax=0.60),  fill="firebrick2", size= 0.001, alpha=0.002) +
guides(fill = guide_legend(override.aes = list(alpha=0.2))) +
theme(axis.text = element_text(size=14),
axis.title=element_text(size=13,face="bold"),
legend.title=element_text(size=15, face = "bold"),
legend.text=element_text(size=15),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 13, face = "bold"),
panel.border = element_rect(colour = "black")) +
scale_fill_manual("Model Performance", labels= c("Poor", "Moderate", "Good"))
View(AUC_base)
AUC_base <- AUC %>%
filter(TA_axis %in% c("CR"))
View(AUC_base)
AUC_base <- AUC %>%
filter(TM_axis %in% c("AU", "CH", "SPA", "TR", "CR")) %>%
filter(TA_axis %in% c("AU", "CH", "SPA", "TR", "CR")) %>%
filter(!TA_axis %in% c("CR"))
plot2 <- ggplot(data= AUC_base, aes(x=model.auc, y=transfer.auc, color= TM_axis, shape= TA_axis)) +
geom_point(size= 9) +
labs(caption= "Red: Poor Performance, Yellow: Moderate Performance, Green: Good Performance") +
scale_colour_discrete(name = "Model") +
scale_shape_discrete(name= "Target Area") +
scale_x_continuous("AUC values of the original models", limits = c(0.45, 0.95)) +
scale_y_continuous("AUC values in transfer regions", limits = c(0.45, 0.95)) +
geom_segment(x= 0, y= 0, xend= 1, yend= 1, color= "black", size= 0.01) +
facet_wrap(~ Resolution) +
theme_bw() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=10, face="bold"),
legend.text=element_text(size=12))
plot2 + geom_rect(mapping=aes(xmin=0.70, xmax=0.95, ymin=0.70, ymax=0.95), fill="green", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.95, ymin=0.60, ymax=0.70),  fill="gold2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.70, ymin=0.70, ymax=0.95), fill="gold2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.60, ymin=0.60, ymax=0.95), fill="firebrick2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.95, ymin=0.45, ymax=0.60),  fill="firebrick2", size= 0.001, alpha=0.002) +
guides(fill = guide_legend(override.aes = list(alpha=0.2))) +
theme(axis.text = element_text(size=14),
axis.title=element_text(size=13,face="bold"),
legend.title=element_text(size=15, face = "bold"),
legend.text=element_text(size=15),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 13, face = "bold"),
panel.border = element_rect(colour = "black")) +
scale_fill_manual("Model Performance", labels= c("Poor", "Moderate", "Good"))
AUC_base <- AUC %>%
filter(TM_axis %in% c("AU", "CH", "SPA", "TR", "CR")) %>%
filter(TA_axis %in% c("AU", "CH", "SPA", "TR"))
plot2 <- ggplot(data= AUC_base, aes(x=model.auc, y=transfer.auc, color= TM_axis, shape= TA_axis)) +
geom_point(size= 9) +
labs(caption= "Red: Poor Performance, Yellow: Moderate Performance, Green: Good Performance") +
scale_colour_discrete(name = "Model") +
scale_shape_discrete(name= "Target Area") +
scale_x_continuous("AUC values of the original models", limits = c(0.45, 0.95)) +
scale_y_continuous("AUC values in transfer regions", limits = c(0.45, 0.95)) +
geom_segment(x= 0, y= 0, xend= 1, yend= 1, color= "black", size= 0.01) +
facet_wrap(~ Resolution) +
theme_bw() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=10, face="bold"),
legend.text=element_text(size=12))
plot2 + geom_rect(mapping=aes(xmin=0.70, xmax=0.95, ymin=0.70, ymax=0.95), fill="green", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.95, ymin=0.60, ymax=0.70),  fill="gold2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.70, ymin=0.70, ymax=0.95), fill="gold2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.60, ymin=0.60, ymax=0.95), fill="firebrick2", size= 0.001, alpha=0.002) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.95, ymin=0.45, ymax=0.60),  fill="firebrick2", size= 0.001, alpha=0.002) +
guides(fill = guide_legend(override.aes = list(alpha=0.2))) +
theme(axis.text = element_text(size=14),
axis.title=element_text(size=13,face="bold"),
legend.title=element_text(size=15, face = "bold"),
legend.text=element_text(size=15),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 13, face = "bold"),
panel.border = element_rect(colour = "black")) +
scale_fill_manual("Model Performance", labels= c("Poor", "Moderate", "Good"))
ggsave("~/Desktop/Graphs/Transferability/Transferability_paper.png")
plot2 + geom_rect(mapping=aes(xmin=0.70, xmax=0.95, ymin=0.70, ymax=0.95), fill="green", size= 0.001, alpha=0.03) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.95, ymin=0.60, ymax=0.70),  fill="gold2", size= 0.001, alpha=0.03) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.70, ymin=0.70, ymax=0.95), fill="gold2", size= 0.001, alpha=0.03) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.60, ymin=0.60, ymax=0.95), fill="firebrick2", size= 0.001, alpha=0.03) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.95, ymin=0.45, ymax=0.60),  fill="firebrick2", size= 0.001, alpha=0.03) +
guides(fill = guide_legend(override.aes = list(alpha=0.2))) +
theme(axis.text = element_text(size=14),
axis.title=element_text(size=13,face="bold"),
legend.title=element_text(size=15, face = "bold"),
legend.text=element_text(size=15),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 13, face = "bold"),
panel.border = element_rect(colour = "black")) +
scale_fill_manual("Model Performance", labels= c("Poor", "Moderate", "Good"))
plot2 + geom_rect(mapping=aes(xmin=0.70, xmax=0.95, ymin=0.70, ymax=0.95), fill="green", size= 0.001, alpha=0.02) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.95, ymin=0.60, ymax=0.70),  fill="gold2", size= 0.001, alpha=0.02) +
geom_rect(mapping=aes(xmin=0.60, xmax=0.70, ymin=0.70, ymax=0.95), fill="gold2", size= 0.001, alpha=0.02) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.60, ymin=0.60, ymax=0.95), fill="firebrick2", size= 0.001, alpha=0.02) +
geom_rect(mapping=aes(xmin=0.45, xmax=0.95, ymin=0.45, ymax=0.60),  fill="firebrick2", size= 0.001, alpha=0.02) +
guides(fill = guide_legend(override.aes = list(alpha=0.2))) +
theme(axis.text = element_text(size=14),
axis.title=element_text(size=13,face="bold"),
legend.title=element_text(size=15, face = "bold"),
legend.text=element_text(size=15),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 13, face = "bold"),
panel.border = element_rect(colour = "black")) +
scale_fill_manual("Model Performance", labels= c("Poor", "Moderate", "Good"))
ggsave("~/Desktop/Graphs/Transferability/Transferability_paper2.png")
load("~/Desktop/Coarse_maxRAU/AU_coarse_NBG_P2.RData")
plot(env_predictors$roadnet)
spplot(env_predictors$roadnet)
spplot(env_predictors$roadnet, cut = 7)
spplot(env_predictors$roadnet, cut = 10)
spplot(env_predictors$roadnet, cut = 15)
spplot(env_predictors$roadnet, cut = 20)
spplot(env_predictors$roadnet, cut = 40)
spplot(env_predictors$roadnet, cut = 450)
spplot(env_predictors$roadnet, cut = 50)
spplot(env_predictors$roadnet)
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
spplot(env_predictors$roadnet)
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
spplot(env_predictors$tcoverd)
plot(env_predictors$tcoverd)
load("~/Desktop/Coarse_maxRAU/AU_coarse_NBG_P2.RData")
plot(env_predictors$tcoverd)
summary(env_predictors$tcoverd)
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
summary(env_predictors$tcoverd)
load("/Users/ibekar/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
deneme <- maxent(env_selected_predictors, p, nbg=NBG[2], args=c('responsecurve= TRUE', 'randomtestpoints=50','randomseed=TRUE','jackknife=TRUE'))
deneme <- maxent(env_selected_predictors, p, nbg=NBG[2], args=c('responsecurves= TRUE', 'randomtestpoints=50','randomseed=TRUE','jackknife=TRUE'))
deneme <- maxent(env_selected_predictors, p, nbg=NBG[2], args=c('responsecurves=TRUE', 'randomtestpoints=50','randomseed=TRUE','jackknife=TRUE'))
View(deneme)
deneme
setwd("~/Desktop/Graphs/Fire")
ch <- read.csv("./inputs/fire_ch.csv")
ch
View(ch)
barplot(ch$Month)
ch$Month
plot(ch$Month)
hist(ch$Month)
spa <- read.csv("./inputs/fire_spa.csv")
spa
tr <- read.csv("./inputs/fire_tr.csv")
hist(tr$Month)
hist(tr$Month)
hist(ch$Month)
au <- read.csv("./inputs/fire_au.csv")
hist(au$Month)
hist(ch$Month)
library(ggplot2)
ggplot(ch) +
geom_histogram(aes(Month))
hist(ch$Month, labels = TRUE)
barplot(ch$Month, labels = TRUE)
hist(ch$Month, labels = TRUE, breaks=11)
hist(ch$Month, labels = TRUE, breaks=12)
hist(ch$Month, labels = TRUE, breaks=12, xlim=c(1,12))
hist(ch$Month, labels = TRUE, breaks=12, xlim=c(1,12))
hist(ch$Month, labels = TRUE, breaks=12, ylim=c(1,12))
hist(ch$Month, labels = TRUE, breaks=12, xlim=c(1,12))
hist(ch$Month, labels = TRUE, breaks=11, xlim=c(1,12))
hist(ch$Month, labels = TRUE, xlim=c(1,12))
barplot(ch$Month, labels = TRUE, xlim=c(1,12))
barplot(ch$Month, xlim=c(1,12))
barplot(ch$Month, ylim=c(1,12))
barplot(ch$Month, xlim=c(1,12))
barplot(ch$Month, xlim=c(1,12), xlab = "Sprays")
hist(ch$Month, labels = TRUE, xlim=c(1,12))
barplot(ch$Month, labels = TRUE, xlim=c(1,12))
barplot(ch$Month)
hist(ch$Month, labels = TRUE, xlim=c(1,12))
hist(ch$Month, labels = TRUE)
hist(tr$Month)
au <- read.csv("./inputs/fire_au.csv")
hist(au$Month)
hist(tr$Month, labels = TRUE)
hist(au$Month, labels = TRUE)
hist(ch$Month, labels = TRUE)
hist(tr$Month, labels = TRUE)
View(au)
hist(au$Cause, labels = TRUE)
barplot(au$Cause, labels = TRUE)
au$Cause
barplot(au$Cause)
plot(au$Cause)
pie(au$Cause)
str(au$Cause)
ggplot(au) +
geom_bar(aes(x = Cause))
ggplot(au) +
geom_bar(aes(x = Cause)) +  + coord_polar("y")
ggplot(au) +
ggplot(au) +
geom_bar(aes(x = Cause)) +  + coord_polar()
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
maxR1 <- maxent(env_selected_predictors, p, nbg=NBG[2], args=c('randomtestpoints=50','randomseed=TRUE','responsecurves=TRUE'))
maxR1
maxR1
env_selected_predictors$tcoverd
plot(env_selected_predictors$tcoverd)
env_predictors$fty
summary(env_predictors$fty)
summary(env_predictors$tcoverd)
summary(env_predictors$fty)
plot(env_selected_predictors$fty)
maxR1
maxR1
load("~/Desktop/Coarse_maxRAU/AU_coarse_NBG_P2.RData")
MaxRCoarse1 <- maxent(env_selected_predictors, p, nbg=NBG[4], args=c('responsecurves=TRUE', 'randomtestpoints=50','randomseed=TRUE'))
MaxRCoarse1 <- maxent(env_selected_predictors, p, nbg=NBG[4], args=c('responsecurves=TRUE', 'randomtestpoints=50','randomseed=TRUE'))
MaxRCoarse1
plot(env_selected_predictors$roadnet)
setwd("~/Desktop/Graphs/Fire")
library(ggplot2)
spa <- read.csv("./inputs/fire_spa.csv")
View(spa)
hist(spa$causa)
barplot(spa$causa)
sum(spa$causa)
summary(spa$causa)
table(spa$causa)
causes <- table(spa$causa)
barplot(causes)
barplot(causes, horiz= T)
barplot(causes)
tr <- read.csv("./inputs/fire_tr.csv")
table(tr$AnaNeden)
table(tr$TaliNeden)
table(tr$AnaNeden)
table(tr$TaliNeden)
au <- read.csv("./inputs/fire_au.csv")
table(au$Cause)
ch <- read.csv("./inputs/fire_ch.csv")
table(ch$Cause)
176/831
table(tr$AnaNeden)
491/2512
table(au$Cause)
99/392
spa <- read.csv("./inputs/fire_spa.csv")
causes <- table(spa$causa)
table(spa$causa)
553/2668
View(spa)
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
setwd("~/Desktop/Graphs/Fire")
au <- read.csv("./inputs/fire_au.csv")
table(au$Cause)
hist(au$Month, labels = TRUE)
ggplot(au) +
geom_bar(aes(x = Cause)) +  + coord_polar()
geom_bar(aes(x = Month)) +  + coord_polar()
ggplot(au) +
geom_bar(aes(x = Month)) +  + coord_polar()
ggplot(au) +
geom_bar(aes(x = Month)) + coord_polar()
ggplot(au) +
geom_bar(aes(x = Cause)) + coord_polar()
ggplot(au) +
geom_bar(aes(x = Month)) + coord_polar()
hist(au$Month, labels = TRUE)
View(au)
table
table(au$Month)
barplot(table(au$Month))
setwd("~/GitHub/DataVisFire/")
library(raster)
library(dplyr)
library(ggplot2)
library(rgdal)
fire <- read.csv("Data/fire_data.csv")
load("~/Desktop/Coarse_maxRCH/CH_coarse_NBG_P2.RData")
View(variable_importance_listR)
load("~/Desktop/Coarse_maxRAU/AU_coarse_NBG_P2.RData")
View(variable_importance_listR)
View(model_stats_others)
load("~/Desktop/Coarse_maxRSPA/SPA_coarse_NBG_P2.RData")
View(model_stats_others)
load("~/Desktop/Coarse_maxRTR2/TR2_coarse_NBG_P2.RData")
View(model_stats_others)
load("~/Desktop/maxR_AU/AU_fine_NBG_P2.RData")
View(model_stats_others)
setwd("~/GitHub/DataVisFire/")
library(raster)
library(dplyr)
library(ggplot2)
library(rgdal)
fire <- read.csv("Data/fire_data.csv")
fire <- fire %>% dplyr::select(Il,Ilce,Day, Month, Year, AnaNeden, TaliNeden, Lon, Lat)
View(fire)
View(fire)
View(fire)
fire$fire <- 1
View(fire)
ggplot(fire, aes(x = fire, y = Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
library(ggridges)
library(ggplot2)
ggplot(fire, aes(x = fire, y = Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
View(fire)
fire
View(fire)
str(fire)
fire$Month <- as.factor(fire$Month)
ggplot(fire, aes(x = fire, y = Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
View(fire)
ggplot(fire, aes(x = fire, y = Year)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire$Year <- as.factor(fire$Year)
ggplot(fire, aes(x = fire, y = Year)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
ggplot(fire, aes(x = fire, y = Year, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
ggplot(fire, aes(x = fire, y = Year, fill= Month)) +
geom_density_ridges_gradient(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
library(tidyverse)
fire %>% filter(tidyverser =" 2014")
fire %>% filter(tidyverser == "2014")
fire %>% filter(Year == "2014")
fire2014 <- fire %>% filter(Year == "2014")
ggplot(fire2014, aes(x = fire, y = Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
ggplot(fire2014, aes(x = Month, y = fire)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire$Day <- as.factor(fire$Day)
ggplot(fire2014, aes(x = Month, y = Day)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire2014 <- fire %>% filter(Year == "2014")
ggplot(fire2014, aes(x = Month, y = Day)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
ggplot(fire2014, aes(x = Day, y = Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
ggplot(fire, aes(x = Month, y = Year)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
bb <- read_csv(paste0("https://raw.githubusercontent.com/",
"rfordatascience/tidytuesday/master/data/",
"2018-10-02/us_births_2000-2014.csv"))
bb <- read_csv(paste0("https://raw.githubusercontent.com/", "rfordatascience/tidytuesday/master/data/", "2018-10-02/us_births_2000-2014.csv"))
fire %>% group_by(Year, Month)
fire %>% group_by(Year, Month) %>%
arrange(Year, Month, Day)
fire %>% group_by(Year, Month) %>%
arrange(Il, Ilce, Year, Month, Day)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
summarise(TF = sum(fire))
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire))
filter(Year = "2014")
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year = "2014") %>%
ggplot(aes(x = Month, y = Year)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = Month, y = TF, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8,
jittered_points = TRUE, point_shape = "|", point_size = 2)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8)
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8) +
labs(x = "Monhts",
y = "Fire Count",
fill= "Months",
title = "Month Distribution of Fires in Turkey",
caption = "Data Source: Ministry of Forestry | Plot by @fire_ecologist" ) +
theme_light()
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8) +
labs(x = "Monhts",
y = "Fire Count",
fill= "Months",
title = "Monthly Distribution of Fires in Turkey",
caption = "Data Source: Ministry of Forestry | Plot by @fire_ecologist" ) +
theme_light()
fire %>%
arrange(Il, Ilce, Year, Month, Day) %>%
group_by(Month) %>%
mutate(TF = sum(fire)) %>%
filter(Year == "2014") %>%
ggplot(aes(x = TF, y = Month, fill= Month)) +
geom_density_ridges(scale = 2, size = 0.15, rel_min_height = 0.001, alpha = .8) +
labs(x = "Fire Count",
y = "Monhts",
fill= "Months",
title = "Monthly Distribution of Fires in Turkey",
caption = "Data Source: Ministry of Forestry | Plot by @fire_ecologist" ) +
theme_light()
